### YamlMime:ManagedReference
items:
- uid: Supabase.Realtime.Channel
  commentId: T:Supabase.Realtime.Channel
  id: Channel
  parent: Supabase.Realtime
  children:
  - Supabase.Realtime.Channel.#ctor(System.String,System.String,System.String,System.String,System.String)
  - Supabase.Realtime.Channel.IsClosed
  - Supabase.Realtime.Channel.IsErrored
  - Supabase.Realtime.Channel.IsJoined
  - Supabase.Realtime.Channel.IsJoining
  - Supabase.Realtime.Channel.IsLeaving
  - Supabase.Realtime.Channel.OnClosed
  - Supabase.Realtime.Channel.OnDelete
  - Supabase.Realtime.Channel.OnError
  - Supabase.Realtime.Channel.OnInsert
  - Supabase.Realtime.Channel.OnMessage
  - Supabase.Realtime.Channel.OnUpdated
  - Supabase.Realtime.Channel.Push(System.String,System.Object,System.Int32)
  - Supabase.Realtime.Channel.Rejoin(System.Int32)
  - Supabase.Realtime.Channel.Socket
  - Supabase.Realtime.Channel.State
  - Supabase.Realtime.Channel.Subscribe(System.Int32)
  - Supabase.Realtime.Channel.Topic
  - Supabase.Realtime.Channel.Unsubscribe
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: Channel
  fullName: Supabase.Realtime.Channel
  type: Class
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Channel
    path: ../Realtime/Channel.cs
    startLine: 12
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nClass representation of a channel subscription\n"
  example: []
  syntax:
    content: public class Channel
    content.vb: Public Class Channel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Supabase.Realtime.Channel.OnInsert
  commentId: F:Supabase.Realtime.Channel.OnInsert
  id: OnInsert
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: OnInsert
  nameWithType: Channel.OnInsert
  fullName: Supabase.Realtime.Channel.OnInsert
  type: Field
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: OnInsert
    path: ../Realtime/Channel.cs
    startLine: 34
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInvoked when the `INSERT` event is raised.\n"
  example: []
  syntax:
    content: public EventHandler<Channel.ItemInsertedEventArgs> OnInsert
    return:
      type: System.EventHandler{Supabase.Realtime.Channel.ItemInsertedEventArgs}
    content.vb: Public OnInsert As EventHandler(Of Channel.ItemInsertedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.OnUpdated
  commentId: F:Supabase.Realtime.Channel.OnUpdated
  id: OnUpdated
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: OnUpdated
  nameWithType: Channel.OnUpdated
  fullName: Supabase.Realtime.Channel.OnUpdated
  type: Field
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: OnUpdated
    path: ../Realtime/Channel.cs
    startLine: 39
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInvoked when the `UPDATE` event is raised.\n"
  example: []
  syntax:
    content: public EventHandler<Channel.ItemUpdatedEventArgs> OnUpdated
    return:
      type: System.EventHandler{Supabase.Realtime.Channel.ItemUpdatedEventArgs}
    content.vb: Public OnUpdated As EventHandler(Of Channel.ItemUpdatedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.OnDelete
  commentId: F:Supabase.Realtime.Channel.OnDelete
  id: OnDelete
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: OnDelete
  nameWithType: Channel.OnDelete
  fullName: Supabase.Realtime.Channel.OnDelete
  type: Field
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: OnDelete
    path: ../Realtime/Channel.cs
    startLine: 44
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInvoked when the `DELETE` event is raised.\n"
  example: []
  syntax:
    content: public EventHandler<Channel.ItemDeletedEventArgs> OnDelete
    return:
      type: System.EventHandler{Supabase.Realtime.Channel.ItemDeletedEventArgs}
    content.vb: Public OnDelete As EventHandler(Of Channel.ItemDeletedEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.OnMessage
  commentId: F:Supabase.Realtime.Channel.OnMessage
  id: OnMessage
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: OnMessage
  nameWithType: Channel.OnMessage
  fullName: Supabase.Realtime.Channel.OnMessage
  type: Field
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: OnMessage
    path: ../Realtime/Channel.cs
    startLine: 49
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInvoked anytime a message is decoded within this topic.\n"
  example: []
  syntax:
    content: public EventHandler<MessageEventArgs> OnMessage
    return:
      type: System.EventHandler{MessageEventArgs}
    content.vb: Public OnMessage As EventHandler(Of MessageEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.OnClosed
  commentId: F:Supabase.Realtime.Channel.OnClosed
  id: OnClosed
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: OnClosed
  nameWithType: Channel.OnClosed
  fullName: Supabase.Realtime.Channel.OnClosed
  type: Field
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: OnClosed
    path: ../Realtime/Channel.cs
    startLine: 54
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInvoked when this channel listener is closed\n"
  example: []
  syntax:
    content: public EventHandler OnClosed
    return:
      type: System.EventHandler
    content.vb: Public OnClosed As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.OnError
  commentId: F:Supabase.Realtime.Channel.OnError
  id: OnError
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: OnError
  nameWithType: Channel.OnError
  fullName: Supabase.Realtime.Channel.OnError
  type: Field
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: OnError
    path: ../Realtime/Channel.cs
    startLine: 59
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInvoked when this channel is in an error state.\n"
  example: []
  syntax:
    content: public EventHandler OnError
    return:
      type: System.EventHandler
    content.vb: Public OnError As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.IsClosed
  commentId: P:Supabase.Realtime.Channel.IsClosed
  id: IsClosed
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: IsClosed
  nameWithType: Channel.IsClosed
  fullName: Supabase.Realtime.Channel.IsClosed
  type: Property
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: IsClosed
    path: ../Realtime/Channel.cs
    startLine: 61
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public bool IsClosed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsClosed As Boolean
  overload: Supabase.Realtime.Channel.IsClosed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Channel.IsErrored
  commentId: P:Supabase.Realtime.Channel.IsErrored
  id: IsErrored
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: IsErrored
  nameWithType: Channel.IsErrored
  fullName: Supabase.Realtime.Channel.IsErrored
  type: Property
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: IsErrored
    path: ../Realtime/Channel.cs
    startLine: 62
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public bool IsErrored { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsErrored As Boolean
  overload: Supabase.Realtime.Channel.IsErrored*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Channel.IsJoined
  commentId: P:Supabase.Realtime.Channel.IsJoined
  id: IsJoined
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: IsJoined
  nameWithType: Channel.IsJoined
  fullName: Supabase.Realtime.Channel.IsJoined
  type: Property
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: IsJoined
    path: ../Realtime/Channel.cs
    startLine: 63
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public bool IsJoined { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsJoined As Boolean
  overload: Supabase.Realtime.Channel.IsJoined*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Channel.IsJoining
  commentId: P:Supabase.Realtime.Channel.IsJoining
  id: IsJoining
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: IsJoining
  nameWithType: Channel.IsJoining
  fullName: Supabase.Realtime.Channel.IsJoining
  type: Property
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: IsJoining
    path: ../Realtime/Channel.cs
    startLine: 64
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public bool IsJoining { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsJoining As Boolean
  overload: Supabase.Realtime.Channel.IsJoining*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Channel.IsLeaving
  commentId: P:Supabase.Realtime.Channel.IsLeaving
  id: IsLeaving
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: IsLeaving
  nameWithType: Channel.IsLeaving
  fullName: Supabase.Realtime.Channel.IsLeaving
  type: Property
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: IsLeaving
    path: ../Realtime/Channel.cs
    startLine: 65
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public bool IsLeaving { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLeaving As Boolean
  overload: Supabase.Realtime.Channel.IsLeaving*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Channel.Socket
  commentId: P:Supabase.Realtime.Channel.Socket
  id: Socket
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: Socket
  nameWithType: Channel.Socket
  fullName: Supabase.Realtime.Channel.Socket
  type: Property
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Socket
    path: ../Realtime/Channel.cs
    startLine: 70
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nShorthand accessor for the Client&apos;s socket connection.\n"
  example: []
  syntax:
    content: public Socket Socket { get; }
    parameters: []
    return:
      type: Supabase.Realtime.Socket
    content.vb: Public ReadOnly Property Socket As Socket
  overload: Supabase.Realtime.Channel.Socket*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Channel.State
  commentId: P:Supabase.Realtime.Channel.State
  id: State
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Channel.State
  fullName: Supabase.Realtime.Channel.State
  type: Property
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: State
    path: ../Realtime/Channel.cs
    startLine: 75
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe Channel&apos;s current state.\n"
  example: []
  syntax:
    content: public Channel.ChannelState State { get; }
    parameters: []
    return:
      type: Supabase.Realtime.Channel.ChannelState
    content.vb: Public ReadOnly Property State As Channel.ChannelState
  overload: Supabase.Realtime.Channel.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Channel.Topic
  commentId: P:Supabase.Realtime.Channel.Topic
  id: Topic
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: Topic
  nameWithType: Channel.Topic
  fullName: Supabase.Realtime.Channel.Topic
  type: Property
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Topic
    path: ../Realtime/Channel.cs
    startLine: 80
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe Channel&apos;s (unique) topic indentifier.\n"
  example: []
  syntax:
    content: public string Topic { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Topic As String
  overload: Supabase.Realtime.Channel.Topic*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Channel.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:Supabase.Realtime.Channel.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: Channel(String, String, String, String, String)
  nameWithType: Channel.Channel(String, String, String, String, String)
  fullName: Supabase.Realtime.Channel.Channel(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: .ctor
    path: ../Realtime/Channel.cs
    startLine: 102
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInitializes a Channel - must call `Subscribe()` to receive events.\n"
  example: []
  syntax:
    content: public Channel(string database, string schema, string table, string col, string value)
    parameters:
    - id: database
      type: System.String
      description: ''
    - id: schema
      type: System.String
      description: ''
    - id: table
      type: System.String
      description: ''
    - id: col
      type: System.String
      description: ''
    - id: value
      type: System.String
      description: ''
    content.vb: Public Sub New(database As String, schema As String, table As String, col As String, value As String)
  overload: Supabase.Realtime.Channel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.Subscribe(System.Int32)
  commentId: M:Supabase.Realtime.Channel.Subscribe(System.Int32)
  id: Subscribe(System.Int32)
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: Subscribe(Int32)
  nameWithType: Channel.Subscribe(Int32)
  fullName: Supabase.Realtime.Channel.Subscribe(System.Int32)
  type: Method
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Subscribe
    path: ../Realtime/Channel.cs
    startLine: 119
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nSubscribes to the channel given supplied options/params.\n"
  example: []
  syntax:
    content: public void Subscribe(int timeoutMs = 10000)
    parameters:
    - id: timeoutMs
      type: System.Int32
      description: ''
    content.vb: Public Sub Subscribe(timeoutMs As Integer = 10000)
  overload: Supabase.Realtime.Channel.Subscribe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.Unsubscribe
  commentId: M:Supabase.Realtime.Channel.Unsubscribe
  id: Unsubscribe
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: Unsubscribe()
  nameWithType: Channel.Unsubscribe()
  fullName: Supabase.Realtime.Channel.Unsubscribe()
  type: Method
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Unsubscribe
    path: ../Realtime/Channel.cs
    startLine: 135
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nUnsubscribes from the channel.\n"
  example: []
  syntax:
    content: public void Unsubscribe()
    content.vb: Public Sub Unsubscribe
  overload: Supabase.Realtime.Channel.Unsubscribe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.Push(System.String,System.Object,System.Int32)
  commentId: M:Supabase.Realtime.Channel.Push(System.String,System.Object,System.Int32)
  id: Push(System.String,System.Object,System.Int32)
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: Push(String, Object, Int32)
  nameWithType: Channel.Push(String, Object, Int32)
  fullName: Supabase.Realtime.Channel.Push(System.String, System.Object, System.Int32)
  type: Method
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Push
    path: ../Realtime/Channel.cs
    startLine: 151
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nSends a `Push` request under this channel.\n\nMaintains a buffer in the event push is called prior to the channel being joined.\n"
  example: []
  syntax:
    content: public void Push(string eventName, object payload, int timeoutMs = 10000)
    parameters:
    - id: eventName
      type: System.String
      description: ''
    - id: payload
      type: System.Object
      description: ''
    - id: timeoutMs
      type: System.Int32
      description: ''
    content.vb: Public Sub Push(eventName As String, payload As Object, timeoutMs As Integer = 10000)
  overload: Supabase.Realtime.Channel.Push*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Channel.Rejoin(System.Int32)
  commentId: M:Supabase.Realtime.Channel.Rejoin(System.Int32)
  id: Rejoin(System.Int32)
  parent: Supabase.Realtime.Channel
  langs:
  - csharp
  - vb
  name: Rejoin(Int32)
  nameWithType: Channel.Rejoin(Int32)
  fullName: Supabase.Realtime.Channel.Rejoin(System.Int32)
  type: Method
  source:
    remote:
      path: Realtime/Channel.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Rejoin
    path: ../Realtime/Channel.cs
    startLine: 173
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nRejoins the channel.\n"
  example: []
  syntax:
    content: public void Rejoin(int timeoutMs = 10000)
    parameters:
    - id: timeoutMs
      type: System.Int32
      description: ''
    content.vb: Public Sub Rejoin(timeoutMs As Integer = 10000)
  overload: Supabase.Realtime.Channel.Rejoin*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Supabase.Realtime
  commentId: N:Supabase.Realtime
  name: Supabase.Realtime
  nameWithType: Supabase.Realtime
  fullName: Supabase.Realtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{Supabase.Realtime.Channel.ItemInsertedEventArgs}
  commentId: T:System.EventHandler{Supabase.Realtime.Channel.ItemInsertedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Channel.ItemInsertedEventArgs>
  nameWithType: EventHandler<Channel.ItemInsertedEventArgs>
  fullName: System.EventHandler<Supabase.Realtime.Channel.ItemInsertedEventArgs>
  nameWithType.vb: EventHandler(Of Channel.ItemInsertedEventArgs)
  fullName.vb: System.EventHandler(Of Supabase.Realtime.Channel.ItemInsertedEventArgs)
  name.vb: EventHandler(Of Channel.ItemInsertedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Supabase.Realtime.Channel.ItemInsertedEventArgs
    name: Channel.ItemInsertedEventArgs
    nameWithType: Channel.ItemInsertedEventArgs
    fullName: Supabase.Realtime.Channel.ItemInsertedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Supabase.Realtime.Channel.ItemInsertedEventArgs
    name: Channel.ItemInsertedEventArgs
    nameWithType: Channel.ItemInsertedEventArgs
    fullName: Supabase.Realtime.Channel.ItemInsertedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Supabase.Realtime.Channel.ItemUpdatedEventArgs}
  commentId: T:System.EventHandler{Supabase.Realtime.Channel.ItemUpdatedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Channel.ItemUpdatedEventArgs>
  nameWithType: EventHandler<Channel.ItemUpdatedEventArgs>
  fullName: System.EventHandler<Supabase.Realtime.Channel.ItemUpdatedEventArgs>
  nameWithType.vb: EventHandler(Of Channel.ItemUpdatedEventArgs)
  fullName.vb: System.EventHandler(Of Supabase.Realtime.Channel.ItemUpdatedEventArgs)
  name.vb: EventHandler(Of Channel.ItemUpdatedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Supabase.Realtime.Channel.ItemUpdatedEventArgs
    name: Channel.ItemUpdatedEventArgs
    nameWithType: Channel.ItemUpdatedEventArgs
    fullName: Supabase.Realtime.Channel.ItemUpdatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Supabase.Realtime.Channel.ItemUpdatedEventArgs
    name: Channel.ItemUpdatedEventArgs
    nameWithType: Channel.ItemUpdatedEventArgs
    fullName: Supabase.Realtime.Channel.ItemUpdatedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{Supabase.Realtime.Channel.ItemDeletedEventArgs}
  commentId: T:System.EventHandler{Supabase.Realtime.Channel.ItemDeletedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<Channel.ItemDeletedEventArgs>
  nameWithType: EventHandler<Channel.ItemDeletedEventArgs>
  fullName: System.EventHandler<Supabase.Realtime.Channel.ItemDeletedEventArgs>
  nameWithType.vb: EventHandler(Of Channel.ItemDeletedEventArgs)
  fullName.vb: System.EventHandler(Of Supabase.Realtime.Channel.ItemDeletedEventArgs)
  name.vb: EventHandler(Of Channel.ItemDeletedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Supabase.Realtime.Channel.ItemDeletedEventArgs
    name: Channel.ItemDeletedEventArgs
    nameWithType: Channel.ItemDeletedEventArgs
    fullName: Supabase.Realtime.Channel.ItemDeletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Supabase.Realtime.Channel.ItemDeletedEventArgs
    name: Channel.ItemDeletedEventArgs
    nameWithType: Channel.ItemDeletedEventArgs
    fullName: Supabase.Realtime.Channel.ItemDeletedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{MessageEventArgs}
  commentId: T:System.EventHandler{MessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<MessageEventArgs>
  nameWithType: EventHandler<MessageEventArgs>
  fullName: System.EventHandler<MessageEventArgs>
  nameWithType.vb: EventHandler(Of MessageEventArgs)
  fullName.vb: System.EventHandler(Of MessageEventArgs)
  name.vb: EventHandler(Of MessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: MessageEventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MessageEventArgs
    name: MessageEventArgs
    nameWithType: MessageEventArgs
    fullName: MessageEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Supabase.Realtime.Channel.IsClosed*
  commentId: Overload:Supabase.Realtime.Channel.IsClosed
  name: IsClosed
  nameWithType: Channel.IsClosed
  fullName: Supabase.Realtime.Channel.IsClosed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Supabase.Realtime.Channel.IsErrored*
  commentId: Overload:Supabase.Realtime.Channel.IsErrored
  name: IsErrored
  nameWithType: Channel.IsErrored
  fullName: Supabase.Realtime.Channel.IsErrored
- uid: Supabase.Realtime.Channel.IsJoined*
  commentId: Overload:Supabase.Realtime.Channel.IsJoined
  name: IsJoined
  nameWithType: Channel.IsJoined
  fullName: Supabase.Realtime.Channel.IsJoined
- uid: Supabase.Realtime.Channel.IsJoining*
  commentId: Overload:Supabase.Realtime.Channel.IsJoining
  name: IsJoining
  nameWithType: Channel.IsJoining
  fullName: Supabase.Realtime.Channel.IsJoining
- uid: Supabase.Realtime.Channel.IsLeaving*
  commentId: Overload:Supabase.Realtime.Channel.IsLeaving
  name: IsLeaving
  nameWithType: Channel.IsLeaving
  fullName: Supabase.Realtime.Channel.IsLeaving
- uid: Supabase.Realtime.Channel.Socket*
  commentId: Overload:Supabase.Realtime.Channel.Socket
  name: Socket
  nameWithType: Channel.Socket
  fullName: Supabase.Realtime.Channel.Socket
- uid: Supabase.Realtime.Socket
  commentId: T:Supabase.Realtime.Socket
  parent: Supabase.Realtime
  name: Socket
  nameWithType: Socket
  fullName: Supabase.Realtime.Socket
- uid: Supabase.Realtime.Channel.State*
  commentId: Overload:Supabase.Realtime.Channel.State
  name: State
  nameWithType: Channel.State
  fullName: Supabase.Realtime.Channel.State
- uid: Supabase.Realtime.Channel.ChannelState
  commentId: T:Supabase.Realtime.Channel.ChannelState
  parent: Supabase.Realtime
  name: Channel.ChannelState
  nameWithType: Channel.ChannelState
  fullName: Supabase.Realtime.Channel.ChannelState
- uid: Supabase.Realtime.Channel.Topic*
  commentId: Overload:Supabase.Realtime.Channel.Topic
  name: Topic
  nameWithType: Channel.Topic
  fullName: Supabase.Realtime.Channel.Topic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Supabase.Realtime.Channel.#ctor*
  commentId: Overload:Supabase.Realtime.Channel.#ctor
  name: Channel
  nameWithType: Channel.Channel
  fullName: Supabase.Realtime.Channel.Channel
- uid: Supabase.Realtime.Channel.Subscribe*
  commentId: Overload:Supabase.Realtime.Channel.Subscribe
  name: Subscribe
  nameWithType: Channel.Subscribe
  fullName: Supabase.Realtime.Channel.Subscribe
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Supabase.Realtime.Channel.Unsubscribe*
  commentId: Overload:Supabase.Realtime.Channel.Unsubscribe
  name: Unsubscribe
  nameWithType: Channel.Unsubscribe
  fullName: Supabase.Realtime.Channel.Unsubscribe
- uid: Supabase.Realtime.Channel.Push*
  commentId: Overload:Supabase.Realtime.Channel.Push
  name: Push
  nameWithType: Channel.Push
  fullName: Supabase.Realtime.Channel.Push
- uid: Supabase.Realtime.Channel.Rejoin*
  commentId: Overload:Supabase.Realtime.Channel.Rejoin
  name: Rejoin
  nameWithType: Channel.Rejoin
  fullName: Supabase.Realtime.Channel.Rejoin
