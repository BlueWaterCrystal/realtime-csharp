### YamlMime:ManagedReference
items:
- uid: Supabase.Realtime.Push
  commentId: T:Supabase.Realtime.Push
  id: Push
  parent: Supabase.Realtime
  children:
  - Supabase.Realtime.Push.#ctor(Supabase.Realtime.Channel,System.String,System.Object,System.Int32)
  - Supabase.Realtime.Push.Channel
  - Supabase.Realtime.Push.EventName
  - Supabase.Realtime.Push.IsSent
  - Supabase.Realtime.Push.OnMessage
  - Supabase.Realtime.Push.OnTimeout
  - Supabase.Realtime.Push.Payload
  - Supabase.Realtime.Push.Resend(System.Int32)
  - Supabase.Realtime.Push.Response
  - Supabase.Realtime.Push.Send
  langs:
  - csharp
  - vb
  name: Push
  nameWithType: Push
  fullName: Supabase.Realtime.Push
  type: Class
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Push
    path: ../Realtime/Push.cs
    startLine: 12
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nClass representation of a single request sent to the Socket server.\n\n`Push` also adds additional functionality for retrying, timeouts, and listeners\nfor its associated response from the server.\n"
  example: []
  syntax:
    content: public class Push
    content.vb: Public Class Push
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Supabase.Realtime.Push.IsSent
  commentId: P:Supabase.Realtime.Push.IsSent
  id: IsSent
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: IsSent
  nameWithType: Push.IsSent
  fullName: Supabase.Realtime.Push.IsSent
  type: Property
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: IsSent
    path: ../Realtime/Push.cs
    startLine: 17
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nFlag representing the `sent` state of a request.\n"
  example: []
  syntax:
    content: public bool IsSent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSent As Boolean
  overload: Supabase.Realtime.Push.IsSent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Push.OnMessage
  commentId: F:Supabase.Realtime.Push.OnMessage
  id: OnMessage
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: OnMessage
  nameWithType: Push.OnMessage
  fullName: Supabase.Realtime.Push.OnMessage
  type: Field
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: OnMessage
    path: ../Realtime/Push.cs
    startLine: 22
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInvoked when the server has responded to a request.\n"
  example: []
  syntax:
    content: public EventHandler<SocketMessageEventArgs> OnMessage
    return:
      type: System.EventHandler{Supabase.Realtime.SocketMessageEventArgs}
    content.vb: Public OnMessage As EventHandler(Of SocketMessageEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Push.OnTimeout
  commentId: F:Supabase.Realtime.Push.OnTimeout
  id: OnTimeout
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: OnTimeout
  nameWithType: Push.OnTimeout
  fullName: Supabase.Realtime.Push.OnTimeout
  type: Field
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: OnTimeout
    path: ../Realtime/Push.cs
    startLine: 27
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInvoked when this `Push` has not been responded to within the timeout interval.\n"
  example: []
  syntax:
    content: public EventHandler OnTimeout
    return:
      type: System.EventHandler
    content.vb: Public OnTimeout As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Push.Response
  commentId: P:Supabase.Realtime.Push.Response
  id: Response
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: Push.Response
  fullName: Supabase.Realtime.Push.Response
  type: Property
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Response
    path: ../Realtime/Push.cs
    startLine: 28
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public SocketMessage Response { get; }
    parameters: []
    return:
      type: Supabase.Realtime.SocketMessage
    content.vb: Public ReadOnly Property Response As SocketMessage
  overload: Supabase.Realtime.Push.Response*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Push.Channel
  commentId: P:Supabase.Realtime.Push.Channel
  id: Channel
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: Push.Channel
  fullName: Supabase.Realtime.Push.Channel
  type: Property
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Channel
    path: ../Realtime/Push.cs
    startLine: 33
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe associated channel.\n"
  example: []
  syntax:
    content: public Channel Channel { get; }
    parameters: []
    return:
      type: Supabase.Realtime.Channel
    content.vb: Public ReadOnly Property Channel As Channel
  overload: Supabase.Realtime.Push.Channel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Push.EventName
  commentId: P:Supabase.Realtime.Push.EventName
  id: EventName
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: EventName
  nameWithType: Push.EventName
  fullName: Supabase.Realtime.Push.EventName
  type: Property
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: EventName
    path: ../Realtime/Push.cs
    startLine: 38
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe event requested.\n"
  example: []
  syntax:
    content: public string EventName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EventName As String
  overload: Supabase.Realtime.Push.EventName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Push.Payload
  commentId: P:Supabase.Realtime.Push.Payload
  id: Payload
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: Payload
  nameWithType: Push.Payload
  fullName: Supabase.Realtime.Push.Payload
  type: Property
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Payload
    path: ../Realtime/Push.cs
    startLine: 43
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nPayload of data to be sent.\n"
  example: []
  syntax:
    content: public object Payload { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Payload As Object
  overload: Supabase.Realtime.Push.Payload*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.Push.#ctor(Supabase.Realtime.Channel,System.String,System.Object,System.Int32)
  commentId: M:Supabase.Realtime.Push.#ctor(Supabase.Realtime.Channel,System.String,System.Object,System.Int32)
  id: '#ctor(Supabase.Realtime.Channel,System.String,System.Object,System.Int32)'
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: Push(Channel, String, Object, Int32)
  nameWithType: Push.Push(Channel, String, Object, Int32)
  fullName: Supabase.Realtime.Push.Push(Supabase.Realtime.Channel, System.String, System.Object, System.Int32)
  type: Constructor
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: .ctor
    path: ../Realtime/Push.cs
    startLine: 58
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nInitilizes a single request that will be `Pushed` to the Socket server.\n"
  example: []
  syntax:
    content: public Push(Channel channel, string eventName, object payload, int timeoutMs = 10000)
    parameters:
    - id: channel
      type: Supabase.Realtime.Channel
      description: ''
    - id: eventName
      type: System.String
      description: ''
    - id: payload
      type: System.Object
      description: ''
    - id: timeoutMs
      type: System.Int32
      description: ''
    content.vb: Public Sub New(channel As Channel, eventName As String, payload As Object, timeoutMs As Integer = 10000)
  overload: Supabase.Realtime.Push.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Push.Resend(System.Int32)
  commentId: M:Supabase.Realtime.Push.Resend(System.Int32)
  id: Resend(System.Int32)
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: Resend(Int32)
  nameWithType: Push.Resend(Int32)
  fullName: Supabase.Realtime.Push.Resend(System.Int32)
  type: Method
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Resend
    path: ../Realtime/Push.cs
    startLine: 76
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nResends a `Push` request.\n"
  example: []
  syntax:
    content: public void Resend(int timeoutMs = 10000)
    parameters:
    - id: timeoutMs
      type: System.Int32
      description: ''
    content.vb: Public Sub Resend(timeoutMs As Integer = 10000)
  overload: Supabase.Realtime.Push.Resend*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.Push.Send
  commentId: M:Supabase.Realtime.Push.Send
  id: Send
  parent: Supabase.Realtime.Push
  langs:
  - csharp
  - vb
  name: Send()
  nameWithType: Push.Send()
  fullName: Supabase.Realtime.Push.Send()
  type: Method
  source:
    remote:
      path: Realtime/Push.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Send
    path: ../Realtime/Push.cs
    startLine: 89
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nSends a `Push` request and initializes the Timeout timer.\n"
  example: []
  syntax:
    content: public void Send()
    content.vb: Public Sub Send
  overload: Supabase.Realtime.Push.Send*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Supabase.Realtime
  commentId: N:Supabase.Realtime
  name: Supabase.Realtime
  nameWithType: Supabase.Realtime
  fullName: Supabase.Realtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Supabase.Realtime.Push.IsSent*
  commentId: Overload:Supabase.Realtime.Push.IsSent
  name: IsSent
  nameWithType: Push.IsSent
  fullName: Supabase.Realtime.Push.IsSent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EventHandler{Supabase.Realtime.SocketMessageEventArgs}
  commentId: T:System.EventHandler{Supabase.Realtime.SocketMessageEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SocketMessageEventArgs>
  nameWithType: EventHandler<SocketMessageEventArgs>
  fullName: System.EventHandler<Supabase.Realtime.SocketMessageEventArgs>
  nameWithType.vb: EventHandler(Of SocketMessageEventArgs)
  fullName.vb: System.EventHandler(Of Supabase.Realtime.SocketMessageEventArgs)
  name.vb: EventHandler(Of SocketMessageEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Supabase.Realtime.SocketMessageEventArgs
    name: SocketMessageEventArgs
    nameWithType: SocketMessageEventArgs
    fullName: Supabase.Realtime.SocketMessageEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Supabase.Realtime.SocketMessageEventArgs
    name: SocketMessageEventArgs
    nameWithType: SocketMessageEventArgs
    fullName: Supabase.Realtime.SocketMessageEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Supabase.Realtime.Push.Response*
  commentId: Overload:Supabase.Realtime.Push.Response
  name: Response
  nameWithType: Push.Response
  fullName: Supabase.Realtime.Push.Response
- uid: Supabase.Realtime.SocketMessage
  commentId: T:Supabase.Realtime.SocketMessage
  parent: Supabase.Realtime
  name: SocketMessage
  nameWithType: SocketMessage
  fullName: Supabase.Realtime.SocketMessage
- uid: Supabase.Realtime.Push.Channel*
  commentId: Overload:Supabase.Realtime.Push.Channel
  name: Channel
  nameWithType: Push.Channel
  fullName: Supabase.Realtime.Push.Channel
- uid: Supabase.Realtime.Channel
  commentId: T:Supabase.Realtime.Channel
  parent: Supabase.Realtime
  name: Channel
  nameWithType: Channel
  fullName: Supabase.Realtime.Channel
- uid: Supabase.Realtime.Push.EventName*
  commentId: Overload:Supabase.Realtime.Push.EventName
  name: EventName
  nameWithType: Push.EventName
  fullName: Supabase.Realtime.Push.EventName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Supabase.Realtime.Push.Payload*
  commentId: Overload:Supabase.Realtime.Push.Payload
  name: Payload
  nameWithType: Push.Payload
  fullName: Supabase.Realtime.Push.Payload
- uid: Supabase.Realtime.Push.#ctor*
  commentId: Overload:Supabase.Realtime.Push.#ctor
  name: Push
  nameWithType: Push.Push
  fullName: Supabase.Realtime.Push.Push
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Supabase.Realtime.Push.Resend*
  commentId: Overload:Supabase.Realtime.Push.Resend
  name: Resend
  nameWithType: Push.Resend
  fullName: Supabase.Realtime.Push.Resend
- uid: Supabase.Realtime.Push.Send*
  commentId: Overload:Supabase.Realtime.Push.Send
  name: Send
  nameWithType: Push.Send
  fullName: Supabase.Realtime.Push.Send
