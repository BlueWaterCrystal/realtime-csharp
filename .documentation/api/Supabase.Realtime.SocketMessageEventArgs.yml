### YamlMime:ManagedReference
items:
- uid: Supabase.Realtime.SocketMessageEventArgs
  commentId: T:Supabase.Realtime.SocketMessageEventArgs
  id: SocketMessageEventArgs
  parent: Supabase.Realtime
  children:
  - Supabase.Realtime.SocketMessageEventArgs.#ctor(Supabase.Realtime.SocketMessage)
  - Supabase.Realtime.SocketMessageEventArgs.Message
  langs:
  - csharp
  - vb
  name: SocketMessageEventArgs
  nameWithType: SocketMessageEventArgs
  fullName: Supabase.Realtime.SocketMessageEventArgs
  type: Class
  source:
    remote:
      path: Realtime/Socket.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: SocketMessageEventArgs
    path: ../Realtime/Socket.cs
    startLine: 293
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: 'public class SocketMessageEventArgs : EventArgs'
    content.vb: >-
      Public Class SocketMessageEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Supabase.Realtime.SocketMessageEventArgs.Message
  commentId: P:Supabase.Realtime.SocketMessageEventArgs.Message
  id: Message
  parent: Supabase.Realtime.SocketMessageEventArgs
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: SocketMessageEventArgs.Message
  fullName: Supabase.Realtime.SocketMessageEventArgs.Message
  type: Property
  source:
    remote:
      path: Realtime/Socket.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Message
    path: ../Realtime/Socket.cs
    startLine: 295
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public SocketMessage Message { get; }
    parameters: []
    return:
      type: Supabase.Realtime.SocketMessage
    content.vb: Public ReadOnly Property Message As SocketMessage
  overload: Supabase.Realtime.SocketMessageEventArgs.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Supabase.Realtime.SocketMessageEventArgs.#ctor(Supabase.Realtime.SocketMessage)
  commentId: M:Supabase.Realtime.SocketMessageEventArgs.#ctor(Supabase.Realtime.SocketMessage)
  id: '#ctor(Supabase.Realtime.SocketMessage)'
  parent: Supabase.Realtime.SocketMessageEventArgs
  langs:
  - csharp
  - vb
  name: SocketMessageEventArgs(SocketMessage)
  nameWithType: SocketMessageEventArgs.SocketMessageEventArgs(SocketMessage)
  fullName: Supabase.Realtime.SocketMessageEventArgs.SocketMessageEventArgs(Supabase.Realtime.SocketMessage)
  type: Constructor
  source:
    remote:
      path: Realtime/Socket.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: .ctor
    path: ../Realtime/Socket.cs
    startLine: 297
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public SocketMessageEventArgs(SocketMessage message)
    parameters:
    - id: message
      type: Supabase.Realtime.SocketMessage
    content.vb: Public Sub New(message As SocketMessage)
  overload: Supabase.Realtime.SocketMessageEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Supabase.Realtime
  commentId: N:Supabase.Realtime
  name: Supabase.Realtime
  nameWithType: Supabase.Realtime
  fullName: Supabase.Realtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Supabase.Realtime.SocketMessageEventArgs.Message*
  commentId: Overload:Supabase.Realtime.SocketMessageEventArgs.Message
  name: Message
  nameWithType: SocketMessageEventArgs.Message
  fullName: Supabase.Realtime.SocketMessageEventArgs.Message
- uid: Supabase.Realtime.SocketMessage
  commentId: T:Supabase.Realtime.SocketMessage
  parent: Supabase.Realtime
  name: SocketMessage
  nameWithType: SocketMessage
  fullName: Supabase.Realtime.SocketMessage
- uid: Supabase.Realtime.SocketMessageEventArgs.#ctor*
  commentId: Overload:Supabase.Realtime.SocketMessageEventArgs.#ctor
  name: SocketMessageEventArgs
  nameWithType: SocketMessageEventArgs.SocketMessageEventArgs
  fullName: Supabase.Realtime.SocketMessageEventArgs.SocketMessageEventArgs
