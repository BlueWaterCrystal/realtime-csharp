### YamlMime:ManagedReference
items:
- uid: Supabase.Realtime.SocketStateChangedEventArgs
  commentId: T:Supabase.Realtime.SocketStateChangedEventArgs
  id: SocketStateChangedEventArgs
  parent: Supabase.Realtime
  children:
  - Supabase.Realtime.SocketStateChangedEventArgs.#ctor(Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState,System.EventArgs)
  - Supabase.Realtime.SocketStateChangedEventArgs.Args
  - Supabase.Realtime.SocketStateChangedEventArgs.State
  langs:
  - csharp
  - vb
  name: SocketStateChangedEventArgs
  nameWithType: SocketStateChangedEventArgs
  fullName: Supabase.Realtime.SocketStateChangedEventArgs
  type: Class
  source:
    remote:
      path: Realtime/Socket.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: SocketStateChangedEventArgs
    path: ../Realtime/Socket.cs
    startLine: 273
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: 'public class SocketStateChangedEventArgs : EventArgs'
    content.vb: >-
      Public Class SocketStateChangedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Supabase.Realtime.SocketStateChangedEventArgs.State
  commentId: P:Supabase.Realtime.SocketStateChangedEventArgs.State
  id: State
  parent: Supabase.Realtime.SocketStateChangedEventArgs
  langs:
  - csharp
  - vb
  name: State
  nameWithType: SocketStateChangedEventArgs.State
  fullName: Supabase.Realtime.SocketStateChangedEventArgs.State
  type: Property
  source:
    remote:
      path: Realtime/Socket.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: State
    path: ../Realtime/Socket.cs
    startLine: 283
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public SocketStateChangedEventArgs.ConnectionState State { get; set; }
    parameters: []
    return:
      type: Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState
    content.vb: Public Property State As SocketStateChangedEventArgs.ConnectionState
  overload: Supabase.Realtime.SocketStateChangedEventArgs.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.SocketStateChangedEventArgs.Args
  commentId: P:Supabase.Realtime.SocketStateChangedEventArgs.Args
  id: Args
  parent: Supabase.Realtime.SocketStateChangedEventArgs
  langs:
  - csharp
  - vb
  name: Args
  nameWithType: SocketStateChangedEventArgs.Args
  fullName: Supabase.Realtime.SocketStateChangedEventArgs.Args
  type: Property
  source:
    remote:
      path: Realtime/Socket.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Args
    path: ../Realtime/Socket.cs
    startLine: 284
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public EventArgs Args { get; set; }
    parameters: []
    return:
      type: System.EventArgs
    content.vb: Public Property Args As EventArgs
  overload: Supabase.Realtime.SocketStateChangedEventArgs.Args*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.SocketStateChangedEventArgs.#ctor(Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState,System.EventArgs)
  commentId: M:Supabase.Realtime.SocketStateChangedEventArgs.#ctor(Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState,System.EventArgs)
  id: '#ctor(Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState,System.EventArgs)'
  parent: Supabase.Realtime.SocketStateChangedEventArgs
  langs:
  - csharp
  - vb
  name: SocketStateChangedEventArgs(SocketStateChangedEventArgs.ConnectionState, EventArgs)
  nameWithType: SocketStateChangedEventArgs.SocketStateChangedEventArgs(SocketStateChangedEventArgs.ConnectionState, EventArgs)
  fullName: Supabase.Realtime.SocketStateChangedEventArgs.SocketStateChangedEventArgs(Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState, System.EventArgs)
  type: Constructor
  source:
    remote:
      path: Realtime/Socket.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: .ctor
    path: ../Realtime/Socket.cs
    startLine: 286
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public SocketStateChangedEventArgs(SocketStateChangedEventArgs.ConnectionState state, EventArgs args)
    parameters:
    - id: state
      type: Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState
    - id: args
      type: System.EventArgs
    content.vb: Public Sub New(state As SocketStateChangedEventArgs.ConnectionState, args As EventArgs)
  overload: Supabase.Realtime.SocketStateChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Supabase.Realtime
  commentId: N:Supabase.Realtime
  name: Supabase.Realtime
  nameWithType: Supabase.Realtime
  fullName: Supabase.Realtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Supabase.Realtime.SocketStateChangedEventArgs.State*
  commentId: Overload:Supabase.Realtime.SocketStateChangedEventArgs.State
  name: State
  nameWithType: SocketStateChangedEventArgs.State
  fullName: Supabase.Realtime.SocketStateChangedEventArgs.State
- uid: Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState
  commentId: T:Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState
  parent: Supabase.Realtime
  name: SocketStateChangedEventArgs.ConnectionState
  nameWithType: SocketStateChangedEventArgs.ConnectionState
  fullName: Supabase.Realtime.SocketStateChangedEventArgs.ConnectionState
- uid: Supabase.Realtime.SocketStateChangedEventArgs.Args*
  commentId: Overload:Supabase.Realtime.SocketStateChangedEventArgs.Args
  name: Args
  nameWithType: SocketStateChangedEventArgs.Args
  fullName: Supabase.Realtime.SocketStateChangedEventArgs.Args
- uid: Supabase.Realtime.SocketStateChangedEventArgs.#ctor*
  commentId: Overload:Supabase.Realtime.SocketStateChangedEventArgs.#ctor
  name: SocketStateChangedEventArgs
  nameWithType: SocketStateChangedEventArgs.SocketStateChangedEventArgs
  fullName: Supabase.Realtime.SocketStateChangedEventArgs.SocketStateChangedEventArgs
