### YamlMime:ManagedReference
items:
- uid: Supabase.Realtime.ClientOptions
  commentId: T:Supabase.Realtime.ClientOptions
  id: ClientOptions
  parent: Supabase.Realtime
  children:
  - Supabase.Realtime.ClientOptions.Decode
  - Supabase.Realtime.ClientOptions.Encode
  - Supabase.Realtime.ClientOptions.Headers
  - Supabase.Realtime.ClientOptions.HeartbeatInterval
  - Supabase.Realtime.ClientOptions.Logger
  - Supabase.Realtime.ClientOptions.LongPollerTimeout
  - Supabase.Realtime.ClientOptions.Parameters
  - Supabase.Realtime.ClientOptions.ReconnectAfterInterval
  - Supabase.Realtime.ClientOptions.Timeout
  - Supabase.Realtime.ClientOptions.Transport
  langs:
  - csharp
  - vb
  name: ClientOptions
  nameWithType: ClientOptions
  fullName: Supabase.Realtime.ClientOptions
  type: Class
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: ClientOptions
    path: ../Realtime/ClientOptions.cs
    startLine: 7
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  syntax:
    content: public class ClientOptions
    content.vb: Public Class ClientOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Supabase.Realtime.ClientOptions.Encode
  commentId: P:Supabase.Realtime.ClientOptions.Encode
  id: Encode
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: Encode
  nameWithType: ClientOptions.Encode
  fullName: Supabase.Realtime.ClientOptions.Encode
  type: Property
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Encode
    path: ../Realtime/ClientOptions.cs
    startLine: 12
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe function to encode outgoing messages. Defaults to JSON\n"
  example: []
  syntax:
    content: public Action<object, Action<string>> Encode { get; set; }
    parameters: []
    return:
      type: System.Action{System.Object,System.Action{System.String}}
    content.vb: Public Property Encode As Action(Of Object, Action(Of String))
  overload: Supabase.Realtime.ClientOptions.Encode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.ClientOptions.Decode
  commentId: P:Supabase.Realtime.ClientOptions.Decode
  id: Decode
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: Decode
  nameWithType: ClientOptions.Decode
  fullName: Supabase.Realtime.ClientOptions.Decode
  type: Property
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Decode
    path: ../Realtime/ClientOptions.cs
    startLine: 17
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe function to decode incoming messages.\n"
  example: []
  syntax:
    content: public Action<string, Action<SocketMessage>> Decode { get; set; }
    parameters: []
    return:
      type: System.Action{System.String,System.Action{Supabase.Realtime.SocketMessage}}
    content.vb: Public Property Decode As Action(Of String, Action(Of SocketMessage))
  overload: Supabase.Realtime.ClientOptions.Decode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.ClientOptions.Logger
  commentId: P:Supabase.Realtime.ClientOptions.Logger
  id: Logger
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ClientOptions.Logger
  fullName: Supabase.Realtime.ClientOptions.Logger
  type: Property
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Logger
    path: ../Realtime/ClientOptions.cs
    startLine: 22
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nLogging function\n"
  example: []
  syntax:
    content: public Action<string, string, object> Logger { get; set; }
    parameters: []
    return:
      type: System.Action{System.String,System.String,System.Object}
    content.vb: Public Property Logger As Action(Of String, String, Object)
  overload: Supabase.Realtime.ClientOptions.Logger*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.ClientOptions.Transport
  commentId: P:Supabase.Realtime.ClientOptions.Transport
  id: Transport
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: Transport
  nameWithType: ClientOptions.Transport
  fullName: Supabase.Realtime.ClientOptions.Transport
  type: Property
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Transport
    path: ../Realtime/ClientOptions.cs
    startLine: 27
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe Websocket Transport, for example WebSocket.\n"
  example: []
  syntax:
    content: public string Transport { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Transport As String
  overload: Supabase.Realtime.ClientOptions.Transport*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.ClientOptions.Timeout
  commentId: P:Supabase.Realtime.ClientOptions.Timeout
  id: Timeout
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: ClientOptions.Timeout
  fullName: Supabase.Realtime.ClientOptions.Timeout
  type: Property
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Timeout
    path: ../Realtime/ClientOptions.cs
    startLine: 32
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe default timeout in milliseconds to trigger push timeouts.\n"
  example: []
  syntax:
    content: public TimeSpan Timeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property Timeout As TimeSpan
  overload: Supabase.Realtime.ClientOptions.Timeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.ClientOptions.HeartbeatInterval
  commentId: P:Supabase.Realtime.ClientOptions.HeartbeatInterval
  id: HeartbeatInterval
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: HeartbeatInterval
  nameWithType: ClientOptions.HeartbeatInterval
  fullName: Supabase.Realtime.ClientOptions.HeartbeatInterval
  type: Property
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: HeartbeatInterval
    path: ../Realtime/ClientOptions.cs
    startLine: 37
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe interval to send a heartbeat message\n"
  example: []
  syntax:
    content: public TimeSpan HeartbeatInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property HeartbeatInterval As TimeSpan
  overload: Supabase.Realtime.ClientOptions.HeartbeatInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.ClientOptions.ReconnectAfterInterval
  commentId: P:Supabase.Realtime.ClientOptions.ReconnectAfterInterval
  id: ReconnectAfterInterval
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: ReconnectAfterInterval
  nameWithType: ClientOptions.ReconnectAfterInterval
  fullName: Supabase.Realtime.ClientOptions.ReconnectAfterInterval
  type: Property
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: ReconnectAfterInterval
    path: ../Realtime/ClientOptions.cs
    startLine: 42
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe interval to reconnect\n"
  example: []
  syntax:
    content: public Func<int, TimeSpan> ReconnectAfterInterval { get; set; }
    parameters: []
    return:
      type: System.Func{System.Int32,System.TimeSpan}
    content.vb: Public Property ReconnectAfterInterval As Func(Of Integer, TimeSpan)
  overload: Supabase.Realtime.ClientOptions.ReconnectAfterInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.ClientOptions.LongPollerTimeout
  commentId: F:Supabase.Realtime.ClientOptions.LongPollerTimeout
  id: LongPollerTimeout
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: LongPollerTimeout
  nameWithType: ClientOptions.LongPollerTimeout
  fullName: Supabase.Realtime.ClientOptions.LongPollerTimeout
  type: Field
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: LongPollerTimeout
    path: ../Realtime/ClientOptions.cs
    startLine: 51
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe maximum timeout of a long poll AJAX request.\n"
  example: []
  syntax:
    content: public TimeSpan LongPollerTimeout
    return:
      type: System.TimeSpan
    content.vb: Public LongPollerTimeout As TimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.ClientOptions.Headers
  commentId: F:Supabase.Realtime.ClientOptions.Headers
  id: Headers
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: ClientOptions.Headers
  fullName: Supabase.Realtime.ClientOptions.Headers
  type: Field
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Headers
    path: ../Realtime/ClientOptions.cs
    startLine: 56
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nRequest headers to be appended to the connection string.\n"
  example: []
  syntax:
    content: public Dictionary<string, object> Headers
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Headers As Dictionary(Of String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Realtime.ClientOptions.Parameters
  commentId: F:Supabase.Realtime.ClientOptions.Parameters
  id: Parameters
  parent: Supabase.Realtime.ClientOptions
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: ClientOptions.Parameters
  fullName: Supabase.Realtime.ClientOptions.Parameters
  type: Field
  source:
    remote:
      path: Realtime/ClientOptions.cs
      branch: master
      repo: https://github.com/supabase/realtime-csharp.git
    id: Parameters
    path: ../Realtime/ClientOptions.cs
    startLine: 61
  assemblies:
  - Realtime
  namespace: Supabase.Realtime
  summary: "\nThe optional params to pass when connecting\n"
  example: []
  syntax:
    content: public SocketOptionsParameters Parameters
    return:
      type: Supabase.Realtime.SocketOptionsParameters
    content.vb: Public Parameters As SocketOptionsParameters
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Supabase.Realtime
  commentId: N:Supabase.Realtime
  name: Supabase.Realtime
  nameWithType: Supabase.Realtime
  fullName: Supabase.Realtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Supabase.Realtime.ClientOptions.Encode*
  commentId: Overload:Supabase.Realtime.ClientOptions.Encode
  name: Encode
  nameWithType: ClientOptions.Encode
  fullName: Supabase.Realtime.ClientOptions.Encode
- uid: System.Action{System.Object,System.Action{System.String}}
  commentId: T:System.Action{System.Object,System.Action{System.String}}
  parent: System
  definition: System.Action`2
  name: Action<Object, Action<String>>
  nameWithType: Action<Object, Action<String>>
  fullName: System.Action<System.Object, System.Action<System.String>>
  nameWithType.vb: Action(Of Object, Action(Of String))
  fullName.vb: System.Action(Of System.Object, System.Action(Of System.String))
  name.vb: Action(Of Object, Action(Of String))
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Supabase.Realtime.ClientOptions.Decode*
  commentId: Overload:Supabase.Realtime.ClientOptions.Decode
  name: Decode
  nameWithType: ClientOptions.Decode
  fullName: Supabase.Realtime.ClientOptions.Decode
- uid: System.Action{System.String,System.Action{Supabase.Realtime.SocketMessage}}
  commentId: T:System.Action{System.String,System.Action{Supabase.Realtime.SocketMessage}}
  parent: System
  definition: System.Action`2
  name: Action<String, Action<SocketMessage>>
  nameWithType: Action<String, Action<SocketMessage>>
  fullName: System.Action<System.String, System.Action<Supabase.Realtime.SocketMessage>>
  nameWithType.vb: Action(Of String, Action(Of SocketMessage))
  fullName.vb: System.Action(Of System.String, System.Action(Of Supabase.Realtime.SocketMessage))
  name.vb: Action(Of String, Action(Of SocketMessage))
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Supabase.Realtime.SocketMessage
    name: SocketMessage
    nameWithType: SocketMessage
    fullName: Supabase.Realtime.SocketMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Supabase.Realtime.SocketMessage
    name: SocketMessage
    nameWithType: SocketMessage
    fullName: Supabase.Realtime.SocketMessage
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Supabase.Realtime.ClientOptions.Logger*
  commentId: Overload:Supabase.Realtime.ClientOptions.Logger
  name: Logger
  nameWithType: ClientOptions.Logger
  fullName: Supabase.Realtime.ClientOptions.Logger
- uid: System.Action{System.String,System.String,System.Object}
  commentId: T:System.Action{System.String,System.String,System.Object}
  parent: System
  definition: System.Action`3
  name: Action<String, String, Object>
  nameWithType: Action<String, String, Object>
  fullName: System.Action<System.String, System.String, System.Object>
  nameWithType.vb: Action(Of String, String, Object)
  fullName.vb: System.Action(Of System.String, System.String, System.Object)
  name.vb: Action(Of String, String, Object)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`3
  commentId: T:System.Action`3
  isExternal: true
  name: Action<T1, T2, T3>
  nameWithType: Action<T1, T2, T3>
  fullName: System.Action<T1, T2, T3>
  nameWithType.vb: Action(Of T1, T2, T3)
  fullName.vb: System.Action(Of T1, T2, T3)
  name.vb: Action(Of T1, T2, T3)
  spec.csharp:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`3
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: Supabase.Realtime.ClientOptions.Transport*
  commentId: Overload:Supabase.Realtime.ClientOptions.Transport
  name: Transport
  nameWithType: ClientOptions.Transport
  fullName: Supabase.Realtime.ClientOptions.Transport
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Supabase.Realtime.ClientOptions.Timeout*
  commentId: Overload:Supabase.Realtime.ClientOptions.Timeout
  name: Timeout
  nameWithType: ClientOptions.Timeout
  fullName: Supabase.Realtime.ClientOptions.Timeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: Supabase.Realtime.ClientOptions.HeartbeatInterval*
  commentId: Overload:Supabase.Realtime.ClientOptions.HeartbeatInterval
  name: HeartbeatInterval
  nameWithType: ClientOptions.HeartbeatInterval
  fullName: Supabase.Realtime.ClientOptions.HeartbeatInterval
- uid: Supabase.Realtime.ClientOptions.ReconnectAfterInterval*
  commentId: Overload:Supabase.Realtime.ClientOptions.ReconnectAfterInterval
  name: ReconnectAfterInterval
  nameWithType: ClientOptions.ReconnectAfterInterval
  fullName: Supabase.Realtime.ClientOptions.ReconnectAfterInterval
- uid: System.Func{System.Int32,System.TimeSpan}
  commentId: T:System.Func{System.Int32,System.TimeSpan}
  parent: System
  definition: System.Func`2
  name: Func<Int32, TimeSpan>
  nameWithType: Func<Int32, TimeSpan>
  fullName: System.Func<System.Int32, System.TimeSpan>
  nameWithType.vb: Func(Of Int32, TimeSpan)
  fullName.vb: System.Func(Of System.Int32, System.TimeSpan)
  name.vb: Func(Of Int32, TimeSpan)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Supabase.Realtime.SocketOptionsParameters
  commentId: T:Supabase.Realtime.SocketOptionsParameters
  parent: Supabase.Realtime
  name: SocketOptionsParameters
  nameWithType: SocketOptionsParameters
  fullName: Supabase.Realtime.SocketOptionsParameters
